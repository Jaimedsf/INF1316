NAGIB MOURA SUAID - 1710839
PEDRO CHAMBERLAIN MATOS - 1710883

SIMULAÇÃO:

exec user_program (1,1,1,1,1,1,1,1,1,1)
exec user_program (3,3,3,3,3)
exec user_program (7,13,13)
exec user_program (1,7,4,2)

RESULTADO TEÓRICO:

P1 roda por 1 segundo na fila 1 e pede I/O.
P2 roda por 2 segundos na fila 1 e desce com 1.
P3 roda por 2 segundos na fila 1 e desce com 5.
P4 roda por 1 segundo na fila 1 e pede I/O.
P1 roda por 1 segundo na fila 1 e pede I/O.
P2 roda por 1 segundo na fila 2 e pede I/O.
P3 roda por 4 segundos na fila 2 e desce com 1.
P4 roda por 2 segundos na fila 1 e desce com 5.
P1 roda por 1 segundo na fila 1 e pede I/O.
P2 roda por 2 segundos na fila 1 e desce com 1.
P4 roda por 4 segundos na fila 2 e desce com 1.
P2 roda por 1 segundo na fila 2 e pede I/O.
P1 roda por 1 segundo na fila 1 e pede I/O.
P3 roda por 1 segundos na fila 3 e pede I/O.
P4 roda por 1 segundo na fila 3 e pede I/O.
P2 roda por 2 segundos na fila 1 e desce com 1.
P1 roda por 1 segundo na fila 1 e pede I/O.
P2 roda por 1 segundo na fila 2 e pede I/O.
P3 roda por 4 segundos na fila 2 e desce com 9.
P4 roda por 4 segundos na fila 2 e pede I/O. ***
P1 roda por 1 segundo na fila 1 e pede I/O.
P2 roda por 2 segundos na fila 1 e desce com 1.
P2 roda por 1 segundo na fila 2 e pede I/O.
P4 roda por 2 segundos na fila 1 e termina.
P1 roda por 1 segundo na fila 1 e pede I/O.
P2 roda por 2 segundos na fila 1 e desce com 1.
P2 roda por 1 segundo na fila 2 e termina.
P1 roda por 1 segundo na fila 1 e pede I/O.
P3 roda por 8 segundos na fila 3 e permanece com 1.
P1 roda por 1 segundo na fila 1 e pede I/O.
P3 roda por 1 segundo na fila 3 e pede I/O.
Escalonador fica ocioso por 2 segundos.
P1 roda por 1 segundo na fila 1 e termina.
P3 roda por 4 segundos na fila 2 e desce com 9.
P3 roda por 8 segundos na fila 3 e permanece com 1.
P3 roda por 1 segundo na fila 3 e termina.

A marcação '***' delimita onde o programa difere da teoria.
No escalonador, quando a rajada do processo executado é
equivalente ao quantum da fila, o processo desce de
prioridade sem pedir I/O, enquanto, idealmente, o programa
deveria pedir por I/O e subir de prioridade. 

RESULTADO PRÁTICO:

> Executando P1 na fila 1
pid: P1| i: 0| j:0

> P1 pediu I/O

> Executando P2 na fila 1
pid: P2| i: 0| j:0
pid: P2| i: 0| j:1

> P2 esgotou seu quantum

> Executando P3 na fila 1
pid: P3| i: 0| j:0
pid: P3| i: 0| j:1

> P3 esgotou seu quantum

> Executando P4 na fila 1
pid: P4| i: 0| j:0

> P4 pediu I/O

> Executando P1 na fila 1
pid: P1| i: 1| j:0

> P1 pediu I/O

> Executando P2 na fila 2
pid: P2| i: 0| j:2

> P2 pediu I/O

> Executando P3 na fila 2
pid: P3| i: 0| j:2
pid: P3| i: 0| j:3
pid: P3| i: 0| j:4
pid: P3| i: 0| j:5

> P3 esgotou seu quantum

> Executando P4 na fila 1
pid: P4| i: 1| j:0
pid: P4| i: 1| j:1

> P4 esgotou seu quantum

> Executando P1 na fila 1
pid: P1| i: 2| j:0

> P1 pediu I/O

> Executando P2 na fila 1
pid: P2| i: 1| j:0
pid: P2| i: 1| j:1

> P2 esgotou seu quantum

> Executando P4 na fila 2
pid: P4| i: 1| j:2
pid: P4| i: 1| j:3
pid: P4| i: 1| j:4
pid: P4| i: 1| j:5

> P4 esgotou seu quantum

> Executando P2 na fila 2
pid: P2| i: 1| j:2

> P2 pediu I/O

> Executando P1 na fila 1
pid: P1| i: 3| j:0

> P1 pediu I/O

> Executando P3 na fila 3
pid: P3| i: 0| j:6

> P3 pediu I/O

> Executando P4 na fila 3
pid: P4| i: 1| j:6

> P4 pediu I/O

> Executando P2 na fila 1
pid: P2| i: 2| j:0
pid: P2| i: 2| j:1

> P2 esgotou seu quantum

> Executando P1 na fila 1
pid: P1| i: 4| j:0

> P1 pediu I/O

> Executando P2 na fila 2
pid: P2| i: 2| j:2

> P2 pediu I/O

> Executando P3 na fila 2
pid: P3| i: 1| j:0
pid: P3| i: 1| j:1
pid: P3| i: 1| j:2
pid: P3| i: 1| j:3

> P3 esgotou seu quantum

> Executando P4 na fila 2
pid: P4| i: 2| j:0
pid: P4| i: 2| j:1
pid: P4| i: 2| j:2
pid: P4| i: 2| j:3

> P4 esgotou seu quantum

> Executando P1 na fila 1
pid: P1| i: 5| j:0

> P1 pediu I/O

> Executando P2 na fila 1
pid: P2| i: 3| j:0
pid: P2| i: 3| j:1

> P2 esgotou seu quantum

> Executando P2 na fila 2
pid: P2| i: 3| j:2

> P2 pediu I/O

> Executando P1 na fila 1
pid: P1| i: 6| j:0

> P1 pediu I/O

> Executando P3 na fila 3
pid: P3| i: 1| j:4
pid: P3| i: 1| j:5
pid: P3| i: 1| j:6
pid: P3| i: 1| j:7
pid: P3| i: 1| j:8
pid: P3| i: 1| j:9
pid: P3| i: 1| j:10
pid: P3| i: 1| j:11

> P3 esgotou seu quantum

> Executando P4 na fila 3

> P4 pediu I/O

> Executando P2 na fila 1
pid: P2| i: 4| j:0
pid: P2| i: 4| j:1

> P2 esgotou seu quantum

> Executando P1 na fila 1
pid: P1| i: 7| j:0

> P1 pediu I/O

> Executando P2 na fila 2
pid: P2| i: 4| j:2

> P2 terminou

> Executando P4 na fila 2
pid: P4| i: 3| j:0-
pid: P4| i: 3| j:1

> P4 terminou

> Executando P1 na fila 1
pid: P1| i: 8| j:0

> P1 pediu I/O

> Executando P3 na fila 3
pid: P3| i: 1| j:12

> P3 pediu I/O

> Executando P1 na fila 1
pid: P1| i: 9| j:0

> P1 terminou

> Executando P3 na fila 2
pid: P3| i: 2| j:0
pid: P3| i: 2| j:1
pid: P3| i: 2| j:2
pid: P3| i: 2| j:3

> P3 esgotou seu quantum

> Executando P3 na fila 3
pid: P3| i: 2| j:4
pid: P3| i: 2| j:5
pid: P3| i: 2| j:6
pid: P3| i: 2| j:7
pid: P3| i: 2| j:8
pid: P3| i: 2| j:9
pid: P3| i: 2| j:10
pid: P3| i: 2| j:11

> P3 esgotou seu quantum

> Executando P3 na fila 3
pid: P3| i: 2| j:12

> P3 terminou

