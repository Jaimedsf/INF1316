1. Defina o conceito de processo
Um processo pode ser definido como o ambiente onde um programa é executado. Este ambiente, além das informações 
sobre a execução, possui também o quanto de recursos do sistema cada programa pode utilizar, como o espaço de 
endereçamento, tempo de processador e área em disco.

2. Quais os cinco estados possíveis de um processo? Indique as possíveis transições de
estados de um processo.
Os estados são: Criação (new), Execução (running), Espera (waiting), Pronto (ready) e Terminado (terminated). 
As transições possíveis são: Criação -> Pronto, Pronto -> Espera, 
Pronto -> Execução, Espera -> Pronto, Execução -> Pronto,
Execução -> Terminado.

3. O que é o contexto de hardware de um processo e como é a implementação da troca de 
contexto?
O contexto de hardware armazena o conteúdo dos registradores gerais da UCP, além dos registradores de uso específico 
como program counter (PC), stack pointer (SP) e registrador de status. Quando um processo está em execução, o seu 
contexto de hardware está armazenado nos registradores do processador. No momento em que o processo perde a 
utilização da UCP, o sistema salva as informações no contexto de hardware do processo. 

4. O que é o espaço de endereçamento de um processo? Como é decomposto?
O espaço de endereçamento é a área de memória pertencente ao processo onde as instruções e dados do programa são 
armazenados para execução. Cada processo possui seu próprio espaço de endereçamento, que deve ser devidamente 
protegido do acesso dos demais processos.

5. Como o sistema operacional implementa o conceito de processo? Qual a estrutura de dados
indicada para armazenar informações sobre os diversos processos na memória principal?

6. Explique a diferença entre processos foreground e background.
Um processo foreground é aquele que permite a comunicação direta do usuário com o processo durante o seu 
processamento. Neste caso, tanto o canal de entrada quanto o de saída estão associados a um terminal com teclado, 
mouse e monitor, permitindo, assim, a interação com o usuário. Um processo background é aquele onde não existe a 
comunicação com o usuário durante o seu processamento. Neste caso, os canais de E/S não estão associados a nenhum 
dispositivo de E/S interativo, mas em geral a arquivos de E/S. 

7. Diferencie os tempos de processador, espera, turnaround e resposta.
Tempo de processador é o tempo que leva para chamar o processo.
Tempo de espera é equivalente ao tempo que o sistema espera dentro da fila.
Turnaround é o tempo de vida do ciclo desde sua criação ao seu término.
Tempo de resposta é o tempo entre a chamada e a resposta do processador.

8. Diferencie os escalonamentos preemptivos e não-preemptivos.
No escalonamento preemptivo, o sistema operacional pode interromper um processo em execução e passá-lo para o 
estado de pronto, com o objetivo de alocar outro processo na UCP. No escalonamento não-preemptivo,  quando um 
processo está em execução, nenhum evento externo pode ocasionar a perda do uso do processador. O processo somente 
sai do estado de execução, caso termine seu processamento ou execute instruções do próprio código que ocasionem uma 
mudança para o estado de espera. 

9. Qual a diferença entre os escalonamentos FIFO e circular?
O FIFO é um escalonamento não-preemptivo onde o processo que chegar primeiro ao estado de pronto é o selecionado 
para execução. Este algoritmo é bastante simples, sendo necessária apenas uma fila, onde os processos que passam para 
o estado de pronto entram no seu final e são escalonados quando chegam ao seu início. Quando um processo vai para o 
estado de espera, o primeiro processo da fila de pronto é escalonado. Todos os processos quando saem do estado de 
espera entram no final da fila de pronto. O Circular é um escalonamento preemptivo, projetado especialmente para 
sistemas de tempo compartilhado. Esse algoritmo é bastan te semelhante ao FIFO, poré m, quando um processo  passa 
para o estado de execução, existe um tempo limite para o uso contínuo do processador denominado fatia de tempo 
(time-slice) ou quantum. 

10. Descreva o escalonamento SJF e o escalonamento por prioridades.
No escalonamento SJF, o algoritmo de escalonamento seleciona o processo que tiver o menor tempo de processador 
ainda por executar. Dessa forma, o processo em estado de pronto que necessitar de menos tempo de UCP para terminar 
seu processamento é selecionado para execução. O escalonamento por prioridades é um escalonamento do tipo 
preemptivo realizado com base em um valor associado a cada processo denomidado prioridade de execução. O processo 
com maior prioridade no estado de pronto é sempre o escolhido para execução e processos com valores iguais são 
escalonados seguindo o critério de FIFO. Neste escalonamento, o conceito de fatia de tempo não existe, 
conseqüentemente, um processo em execução não pode sofrer preempção por tempo. 

11. Qual a diferença entre preempção por tempo e preempção por prioridade?
Preempção por tempo ocorre quando o sistema operacional interrompe o processo em execução em função da expiração 
da sua fatia de tempo, sub stituindo-o por outro processo. Preempção por pr ioridade, ocorre quando o sistema 
operacional interrompe o processo em execução em função de um processo entrar em estado de pronto com prioridade 
superior ao do processo em execução. 

12. O que é um mecanismo de escalonamento adaptativo?
É um mecanismo onde o sistema operacional identifica o comportamento dos processos durante sua execução 
adaptando as políticas de escalonamento dinamicamente.

13. Que tipo de escalonamento é exigido por aplicações de tempo real?
Escalonamento por prioridades, onde é possível atribuir prioridades aos processos em função da sua importância. Além 
disso, o mecanismo de preempção por prioridades garante o escalonamento imediato de processos críticos quando esses 
passam para o estado de pronto. 

14. Como o valor do time slice pode afetar o grau de multiprogramação em um sistema
operacional? Qual a principal desvantagem de um time slice com um valor muito pequeno?
E se o time slice for muito alto?

15. Considere que cinco processos sejam criados no instante de tempo 0 e possuam características
descritas na tabela a seguir: Desenhe um diagrama ilustrando o escalonamento dos processos e seus
respectivos tempos de turnaround, segundo as políticas especificadas a seguir. O tempo de troca
de contexto deve ser desconsiderado.

Processo - Tempo de UCP	- Prioridade
P1	   10 segundos	  3
P2	   14 segundos	  4
P3	    5 segundos	  1
P4	    7 segundos	  2
P5	   20 segundos	  5

a) FIFO (first-in first-out)

	P1 -> P2 -> P3 -> P4 -> P5
	5     8	    3     4    1

	Execução total: 30 u.t.

b) SJF (Shortest job first)

	P3 -> P4 -> P1 -> P2 -> P5
	5     7	    10    14    20

	Execução total: 30 u.t.

c) Prioridade (número menor implica prioridade maior)

	P3 -> P4 -> P1 -> P2 -> P5
	5     7	    10    14    20

	Execução total: 30 u.t.

d) Circular com fatia de tempo igual a 2 u.t.

	P1 -> P2 -> P3 -> P4 -> P5 -> P1 -> P2 -> P3   -> P4 -> P5
	2     2     2	  2	2     2     2     1 + 1    2     2

	P1   -> P2 -> P5 -> P2 -> P5 -> P2 -> P5 -> P5
	1 + 1	2     2     2     2     2     2     2

	Execução: 30 u.t.
	Espera: 2 u.t.
	Total: 32 u.t.

16. Considere um sistema operacional que implemente escalonamento circular com fatia
de tempo igual a 10 u.t. Em um determinado instante de tempo, existem apenas três 
processos (P1, P2 e P3) na fila de pronto, e o tempo de UCP de cada processo é 18, 4
e 13 u.t, respectivamente. Qual o estado de cada processo no instante de tempo T,
considerando a execução dos processos P1, P2 e P3, nesta ordem, e que nenhuma
operação de E/S é realizada?

a) T = 8 u.t.
b) T = 11 u.t.
c) T = 33 u.t.

17. Considere um sistema operacional que implemente escalonamento circular com fatia de tempo
igual a 10 u.t. Em um determinado instante de tempo, existem apenas três
processos (P1, P2 e P3) na fila de pronto, e o tempo de UCP de cada processo é 14, 4
e 12 u.t, respectivamente. Qual o estado de cada processo no instante de tempo T,
considerando a execução dos processos P1, P2 e P3, nesta ordem, e que apenas o
processo P1 realiza operações de E/S? Cada operação de E/S é executada após 5 u.t. e
consome 10 u.t.

a) T = 8 u.t.
	P1: Execução
	P2: Pronto
	P3: Pronto
	
b) T = 18 u.t.
	P1: Terminado
	P2: Execução
	P3: Pronto
	
c) T = 28 u.t.
	P1: Terminado
	P2: Terminado
	P3: Execução

18. Existem quatro processos (P1, P2, P3 e P4) na fila de pronto, com tempos de UCP
estimados em 9, 6, 3 e 5, respectivamente. Em que ordem os processos devem ser
executados para minimizar o tempo de turnaround dos processos?
A melhor política para minimizar o tempo de turnaround  seria utilizar o escalonamento SJF na sequência de execução 
P3, P4, P2 e P1. 

19. Considere a tabela a seguir onde:

Processo - Tempo de UCP	- Prioridade
P1	   40 segundos	  4
P2	   20 segundos	  2
P3	   50 segundos	  1
P4	   30 segundos	  3

Qual o tempo de turnaround médio dos processos considerando o tempo de troca de
contexto igual a 0 e a 5 u.t. para os seguintes escalonamentos:
a) FIFO	
b) SJF
c) Circular com fatia de tempo igual a 20 u.t.

20. Considere um sistema com 2 processadores (CPU1 e CPU2) e memória
compartilhada. Existe uma única fila de processos no estado de pronto que é
compartilhada entre os processadores. Neste sistema são criados 5 processos com os
seguintes tempos:

Processo - Tempo de UCP	- Prioridade - Tempo de criação
P1	   10 segundos	  1	       0
P2	    6 segundos	  7	       2
P3	   12 segundos	  5	       4
P4	   11 segundos	  2	       8
P5	    7 segundos	  4	       11

Desenhe um diagrama, mostrando o que está acontecendo em cada uma das CPUs até o
fim da execução dos 5 processos e calcule o tempo de turnaround dos processos para o
seguinte esquema de escalonamento: Escalonamento Circular com Prioridade (maior
número => mais prioritário) e fatia de tempo = 3 u.t.

Observações:

a) Desconsidere tempo de E/S, tempo de escalonamento ou troca de contexto entre
processos.
b) No tempo 0, serão buscados processos na fila de prontos para executar nas CPUs.
